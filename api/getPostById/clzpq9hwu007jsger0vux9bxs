{"type":"getPostById","data":{"title":"使用 Next.js 搭建个人博客","date":"2024-07-11T01:16:47.000Z","description":"","categories":[{"name":"nextjs","_id":"clzpq9hwp0079sgergadt1z96"}],"tags":[{"name":"nextjs","_id":"clzpq9hzf00brsger5oejatxs"}],"content":"<p>转载自 <a href=\"https://segmentfault.com/a/1190000041912987\">使用 Next.js 搭建个人博客</a></p>\n<p>现阶段有非常非常多的静态博客生成工具（<a href=\"https://jamstack.org/generators/\">site generators</a>），Hexo、VuePress、Docusaurus 等等，基本只需把 markdown 文件配置到指定目录，无需编写其他代码即可建站。</p>\n<p>本文记录一下使用 next.js 从 0 到 1 搭建一个博客网站的流程。</p>\n<h3 id=\"初始化项目\"><a class=\"header-anchor\" href=\"#初始化项目\">※</a>初始化项目</h3>\n<p>使用 blog-starter-typescript 作为模板创建一个项目</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npx create-next-app my-blog --use-yarn --example <span class=\"string\">&quot;https://github.com/vercel/next.js/tree/canary/examples/blog-starter-typescript&quot;</span></span><br></pre></td></tr></table></figure>\n<p>模版 <a href=\"https://github.com/vercel/next.js/tree/canary/examples\">example</a> 是个大仓库，包含了 next.js 与各种技术集成的样例</p>\n<p>模版是简单的 blog 样例，包含读取解析 markdown 文件、加载文章数据、生成首页、生成 blog 文章页面。</p>\n<p>用到的 npm 包：</p>\n<p>gray-matter 处理 yaml front matter<br>\nremark 解析 markdown，把 markdown 转成 ast<br>\nremark-html 把 ast 转成 html<br>\ntailwindcss 原子化样式 class，无需头疼组件 class 的命名</p>\n<h3 id=\"生成页面\"><a class=\"header-anchor\" href=\"#生成页面\">※</a>生成页面</h3>\n<p>生成的页面对应 pages 目录下的文件，页面的路由为文件路径名，例如 pages/about.tsx ，则页面路由为 /about。</p>\n<p>一般项目的目录都会有 src 目录，所以 next.js 也支持 src/pages 目录。</p>\n<p>很明显，不可能为每篇 blog 文章都创建一个文件，那么就需用到动态路由（dynamic routes）。</p>\n<h4 id=\"getStaticPaths\"><a class=\"header-anchor\" href=\"#getStaticPaths\">※</a>getStaticPaths</h4>\n<p>动态路由形如 pages/posts/[slug].tsx，然后就会生成 posts/1, posts/2，slug 可以理解为前端路由的路径参数 params。</p>\n<p>页面需定义 getStaticPaths 方法，必须返回 params 参数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// pages/posts/[slug].tsx</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">Post</span> = (<span class=\"params\"></span>) =&gt; &#123;...&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">Post</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">getStaticPaths</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> posts = <span class=\"title function_\">getAllPosts</span>([<span class=\"string\">&#x27;slug&#x27;</span>])</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">paths</span>: posts.<span class=\"title function_\">map</span>(<span class=\"function\">(<span class=\"params\">post</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        <span class=\"attr\">params</span>: &#123;</span><br><span class=\"line\">          <span class=\"attr\">slug</span>: post.<span class=\"property\">slug</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"获取数据\"><a class=\"header-anchor\" href=\"#获取数据\">※</a>获取数据</h3>\n<h4 id=\"getStaticProps\"><a class=\"header-anchor\" href=\"#getStaticProps\">※</a>getStaticProps</h4>\n<p>getStaticProps 会在服务端执行，因此可以使用 node api，读取文件系统，获取 markdown 内容。</p>\n<p>返回值会作为页面组件的 props，入参为 getStaticPaths的返回值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">Post</span> = (<span class=\"params\">&#123; post, morePosts &#125;: Props</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Layout</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">Layout</span>&gt;</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">Post</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">getStaticProps</span>(<span class=\"params\">&#123; params &#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> post = <span class=\"title function_\">getPostBySlug</span>();</span><br><span class=\"line\">  <span class=\"keyword\">const</span> content = <span class=\"keyword\">await</span> <span class=\"title function_\">markdownToHtml</span>(post.<span class=\"property\">content</span> || <span class=\"string\">&#x27;&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">props</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">post</span>: &#123;</span><br><span class=\"line\">        ...post,</span><br><span class=\"line\">        content,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"定制化\"><a class=\"header-anchor\" href=\"#定制化\">※</a>定制化</h3>\n<p>在 pages 下还有 _app.tsx 和 _document.tsx，这两个文件用于定制化页面。</p>\n<p>next.js 默认使用 next/app 初始化页面，_app.tsx会替代next/app初始化页面，因此可以在 _app.tsx放一些公共逻辑，公共的布局，导入样式等。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">AppProps</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;next/app&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;github-markdown-css/github-markdown-light.css&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;../styles/index.css&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Layout</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/layout&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">function</span> <span class=\"title function_\">MyApp</span>(<span class=\"params\">&#123; Component, pageProps &#125;: AppProps</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Layout</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Component</span> &#123;<span class=\"attr\">...pageProps</span>&#125; /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Layout</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>同样，_document.tsx 用于为 html、body 做定制化</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Html</span>, <span class=\"title class_\">Head</span>, <span class=\"title class_\">Main</span>, <span class=\"title class_\">NextScript</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;next/document&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 必须导入 Html、Head、Main、NextScript，不能省略</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">function</span> <span class=\"title function_\">Document</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Html</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Head</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Main</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">NextScript</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Html</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"结语\"><a class=\"header-anchor\" href=\"#结语\">※</a>结语</h3>\n<p>一个 blog 的原型基本就搭建起来了，剩余就是部署到静态托管服务上（Vercel、GitHub Page 等），另外可以参照 example，与其他技术集成，继续美化 blog。</p>\n","_path":"20240711/shi-yong-next-js-da-jian-ge-ren-bo-ke/","_link":"https://yaoqs.github.io/20240711/shi-yong-next-js-da-jian-ge-ren-bo-ke/","_id":"clzpq9hwu007jsger0vux9bxs"}}