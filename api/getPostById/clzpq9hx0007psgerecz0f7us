{"type":"getPostById","data":{"title":"初尝制作树莓派最简单的rootfs","date":"2022-06-13T16:12:20.000Z","description":"","categories":[{"name":"技术笔记","_id":"clzpq9ht6001lsger8yzb9r3x"},{"name":"树莓派","_id":"clzpq9hxg008asgerdrofhz6i"}],"tags":[{"name":"树莓派","_id":"clzpq9hzk00c7sger199y4nz6"}],"content":"<p>转载自<a href=\"https://blog.csdn.net/qq_19606023/article/details/116423827\">初尝制作树莓派最简单的rootfs</a></p>\n<h1>制作树莓派最简单的rootfs</h1>\n<h3 id=\"文章目录\"><a class=\"header-anchor\" href=\"#文章目录\">※</a>文章目录</h3>\n<ul>\n<li><a href=\"about:blank#rootfs_0\">制作树莓派最简单的rootfs</a></li>\n<li><a href=\"about:blank#busybox_10\">一、下载busybox源码</a></li>\n<li><a href=\"about:blank#busybox_24\">二、编译busybox</a>\n<ul>\n<li><a href=\"about:blank#1Makefile_29\">1.修改顶层Makefile(指定交叉编译工具链)</a></li>\n<li><a href=\"about:blank#2Busybox_40\">2.配置Busybox</a></li>\n<li><a href=\"about:blank#3Busybox_50\">3.编译Busybox</a></li>\n</ul>\n</li>\n<li><a href=\"about:blank#_54\">三、制作最小根文件系统</a>\n<ul>\n<li><a href=\"about:blank#1_55\">1.创建一些必备的文件</a></li>\n<li><a href=\"about:blank#2_73\">2.创建设备文件</a></li>\n<li><a href=\"about:blank#3inittab_94\">3.构造inittab</a></li>\n<li><a href=\"about:blank#4Clib_114\">4.C库lib</a></li>\n</ul>\n</li>\n<li><a href=\"about:blank#sd_120\">四、移植到sd卡</a></li>\n</ul>\n<hr>\n<h1>一、下载busybox源码</h1>\n<p>在BusyBox的官网下载到源码：<br>\n<code>https://busybox.net/downloads/</code><br>\n<img src=\"20210505112323955.png\" alt=\"在这里插入图片描述\"><br>\n将下载的busybox-XXXXXX.tar.bz2复制到任意目录下,并运行命令解压</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -vxjf busybox-1.33.0.tar.bz2</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src=\"20210505112824750.png\" alt=\"在这里插入图片描述\"></p>\n<h1>二、编译busybox</h1>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd busybox-1.33.0  #进入busybox-1.30.0/目录下</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"1-修改顶层Makefile-指定交叉编译工具链\"><a class=\"header-anchor\" href=\"#1-修改顶层Makefile-指定交叉编译工具链\">※</a>1.修改顶层Makefile(指定交叉编译工具链)</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo gedit Makefile</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>一个是164行的<code>CROSS_COMPILE ?=</code>,用来指定交叉编译工具链，目录为自己之前解压的目录<br>\n<img src=\"2021050511345160.png\" alt=\"在这里插入图片描述\"><br>\n另一个地方是190行的<code>ARCH ?=$(SUBARCH)</code>，修改为<code>ARCH ?= arm</code><br>\n<img src=\"2021050511345155.png\" alt=\"在这里插入图片描述\"><br>\n保存退出。</p>\n<h2 id=\"2-配置Busybox\"><a class=\"header-anchor\" href=\"#2-配置Busybox\">※</a>2.配置Busybox</h2>\n<p>在busybox-1.33.0/目录下输入 <code>sudo make defconfig</code> 命令预配置busybox，然后通过<code>sudo make menuconfig</code>图形化界面配置</p>\n<p>第一个地方，Settings-&gt;Build static binary (no shared libs)，不要选中该项（方向键选择，回车键进入下一级目录，空格是选中或不选中，双击ESC返回）。<br>\n<img src=\"20210505115633374.png\" alt=\"在这里插入图片描述\"><br>\n第二个地方，Linux System Utilities—&gt;nsenter，不要选中该项。<br>\n<img src=\"20210505115929953.png\" alt=\"在这里插入图片描述\"><br>\n第三个地方，Coreutils—&gt;sync，不要选中该项<br>\n<img src=\"20210505120101328.png\" alt=\"在这里插入图片描述\"><br>\n其他的默认选项就好，保存退出（一直返回就是退出，退出时会有是否保存修改的选项）。</p>\n<h2 id=\"3-编译Busybox\"><a class=\"header-anchor\" href=\"#3-编译Busybox\">※</a>3.编译Busybox</h2>\n<p>在busybox-1.33.0/目录下输入<code>sudo make install</code>，编译的结果在在busybox-1.33.0/_install<br>\n<img src=\"20210505120608753.png\" alt=\"在这里插入图片描述\"></p>\n<h1>三、制作最小根文件系统</h1>\n<h2 id=\"1-创建一些必备的文件\"><a class=\"header-anchor\" href=\"#1-创建一些必备的文件\">※</a>1.创建一些必备的文件</h2>\n<p>进入到_install目录下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir dev etc lib mnt proc sys tmp var boot</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>/*<br>\n说明</p>\n<ul>\n<li>dev 目录主要共系统生成各类设备节点</li>\n<li>etc 系统的配置文件</li>\n<li>lib 系统需要的各类库文件</li>\n<li>mnt 一般用来挂载其他设备的的目录</li>\n<li>sys 系统文件</li>\n<li>tmp 临时文件</li>\n<li>var</li>\n<li>proc 内存虚拟文件系统节点</li>\n</ul>\n<p>*/<br>\n<img src=\"20210505121317575.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"2-创建设备文件\"><a class=\"header-anchor\" href=\"#2-创建设备文件\">※</a>2.创建设备文件</h2>\n<p>在_install文件夹下面创建两个设备文件/dev/console 和 /dev/NULL</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir /dev/console</span><br><span class=\"line\">mkdir /dev/NULL</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src=\"20210505121638762.png\" alt=\"在这里插入图片描述\"><br>\n查询虚拟机<br>\n<img src=\"20210505121743149.png\" alt=\"在这里插入图片描述\"><br>\nconsole : 主设备号为5，次设备号为1<br>\nnull：主设备号为1，次设备号为3<br>\n所以，创建两个新的设备节点</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">raspi@ubuntu:~/busybox-1.33.0/_install/dev/console$  mknod -m 666 console c 5 1</span><br><span class=\"line\">raspi@ubuntu:~/busybox-1.33.0/_install/dev/NULL$ mknod -m 666 null c 1 3</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>（1）/dev/console<br>\n　　/dev/console代表bai的系统控制台，错误信息和诊du断信息都会被到这个上。<br>\n（2）/dev/null<br>\n　　这个是一个空设备文件，所有写到这个文件中的数据都会被丢弃掉</p>\n<h2 id=\"3-构造inittab\"><a class=\"header-anchor\" href=\"#3-构造inittab\">※</a>3.构造inittab</h2>\n<p>这里移植的是一个已经做好的典型的inittab，所以操作如下<br>\nbusybox-1.33.0/examples/bootfloppy#目录下有一个etc文件夹，<br>\n<img src=\"20210505122401705.png\" alt=\"在这里插入图片描述\"><br>\n全部拷贝到你的_install目录下的etc文件夹下<br>\n<img src=\"20210505122608831.png\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>Fstab:当系统启动的时候，系统会自动地从这个文件读取信息，并且会自动将此文件中指定的文件系统挂载到指定的目录（<a href=\"https://blog.csdn.net/kepa520/article/details/81315430\">https://blog.csdn.net/kepa520/article/details/81315430</a>）<br>\n修改为以下内容：<br>\n<img src=\"20210505123030594.png\" alt=\"在这里插入图片描述\"><br>\n在/etc/init.d目录下运行<code>chmod +x rcS</code><br>\n这样我们这个文件系统启动就会执行rcS，可以在proc目录看到所有运行的文件</li>\n<li>inittab：Linux在完成核内引导以后，就开始运行init程序(<a href=\"https://blog.csdn.net/u014089899/article/details/80622607\">https://blog.csdn.net/u014089899/article/details/80622607</a>)<br>\n<img src=\"2021050512320638.png\" alt=\"在这里插入图片描述\"></li>\n<li>init.d/rcS：rcS是一个脚本文件，在inittab文件中本解析调用，用于配置Linux系统（<a href=\"https://blog.csdn.net/u013686019/article/details/26846571\">https://blog.csdn.net/u013686019/article/details/26846571</a>、<br>\n<a href=\"https://blog.csdn.net/weixin_30839881/article/details/97608919?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.edu_weight&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.edu_weight\">https://blog.csdn.net/weixin_30839881/article/details/97608919?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.edu_weight&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.edu_weight</a>）<br>\n执行mount –a 命令后，将挂接proc、tmpfs文件系统<br>\n写成mount –a 它会依赖于etc/fstab ,根据fstab的指示来挂载根文件系统<br>\n<img src=\"20210505123347984.png\" alt=\"在这里插入图片描述\"></li>\n<li>profile：/etc/profile文件的改变会涉及到系统的环境（<a href=\"https://www.cnblogs.com/lh03061238/p/9952659.html\">https://www.cnblogs.com/lh03061238/p/9952659.html</a>）<br>\n<img src=\"20210505123533177.png\" alt=\"在这里插入图片描述\"></li>\n</ul>\n<p>4.C库lib<br>\n----------------------------------------------------------------------</p>\n<pre><code>进入到编译busybox的C库，路径是/tools-master/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/arm-linux-gnueabihf/libc/lib/arm-linux-gnueabihf  \n![在这里插入图片描述](20210505124020177.png)  \n交叉编译工具链里面需要的文件动态链接到\\_install的lib下  \n![在这里插入图片描述](20210505124341931.png)  \n![在这里插入图片描述](20210505124449130.png)\n</code></pre>\n<h1>四、移植到sd卡</h1>\n<p>与内核移植一致，首先在/busybox-1.33.0下创建mnt/ext4用来挂载的文件夹，</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mount /dev/sdb2 mnt/ext4</span><br><span class=\"line\">sudo cp -r _install/* mnt/ext4 -d</span><br><span class=\"line\">sudo umount /mnt/ext4</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>注意：这里必须将文件夹整体拷贝进SD卡，不能在拷贝之后在添加boot等文件夹，否则会出现一些问题,可能的原因是，第一次启动时，已经将文件系统烧写进内存当中,再次修改导致死机，文件系统做的任何修改都不行要整体拷贝</p>\n<p>本文转自 <a href=\"https://blog.csdn.net/qq_19606023/article/details/116423827\">https://blog.csdn.net/qq_19606023/article/details/116423827</a>，如有侵权，请联系删除。</p>\n","_path":"20220613/chu-chang-zhi-zuo-shu-mei-pai-zui-jian-dan-de-rootfs/","_link":"https://yaoqs.github.io/20220613/chu-chang-zhi-zuo-shu-mei-pai-zui-jian-dan-de-rootfs/","_id":"clzpq9hx0007psgerecz0f7us"}}